{"componentChunkName":"component---src-templates-docs-template-js","path":"/getstarted/quickstart/","result":{"data":{"markdownRemark":{"html":"<div class=\"DeveloperGuidelines\">\n<h2>Pre-Installation</h2>\n<p>Install the following essential libraries according to each OS. Building AGE from the source depends on the following Linux libraries (Ubuntu package names shown below):</p>\n<ul>\n<li>CentOS</li>\n</ul>\n<pre><code>yum install gcc glibc glib-common readline readline-devel zlib zlib-devel flex bison\n</code></pre>\n<ul>\n<li>Fedora</li>\n</ul>\n<pre><code>dnf install gcc glibc bison flex readline readline-devel zlib zlib-devel\n</code></pre>\n<ul>\n<li>Ubuntu</li>\n</ul>\n<pre><code>sudo apt-get install build-essential libreadline-dev zlib1g-dev flex bison\n</code></pre>\n<h2>Installation</h2>\n<p>Apache AGE is intended to be simple to install and run. It can be installed with Docker and other traditional ways.</p>\n<ul>\n<li>Install PostgreSQL</li>\n</ul>\n<p>You will need to install an AGE compatible version of Postgres, for now AGE supports Postgres 11, 12, 13, 14, 15 &#x26; 16. Supporting the latest versions is on AGE roadmap.</p>\n<ul>\n<li>Installation via Package Manager</li>\n</ul>\n<p>You can use a <a href=\"https://www.postgresql.org/download/\">package management</a> that your OS provides to download AGE.</p>\n<pre><code>sudo apt install postgresql\n</code></pre>\n<ul>\n<li>Installation From Source Code</li>\n</ul>\n<p>You can <a href=\"https://www.postgresql.org/ftp/source/\">download the Postgres</a> source code and install your own instance of Postgres. You can read instructions on how to install from source code for different versions on the <a href=\"https://www.postgresql.org/docs/16/installation.html\">official Postgres Website</a>.</p>\n<ul>\n<li>Install AGE on Linux and MacOS</li>\n</ul>\n<p>Clone the <a href=\"https://github.com/apache/age\">github repository</a> or download the download an <a href=\"https://github.com/apache/age/releases\">official release</a>. Run the pg_config utility and check the version of PostgreSQL. Currently, only PostgreSQL versions 11, 12, 13, 14, 15 &#x26; 16 are supported. If you have any other version of Postgres, you will need to install PostgreSQL version 11, 12, 13, 14, 15, or 16.</p>\n<pre><code>pg_config\n</code></pre>\n<p>Run the following command in the source code directory of Apache AGE to build and install the extension.</p>\n<pre><code>make install\n</code></pre>\n<p>If the path to your Postgres installation is not in the PATH variable, add the path in the arguments:</p>\n<pre><code>make PG_CONFIG=/path/to/postgres/bin/pg_config install\n</code></pre>\n<ul>\n<li>Run using Docker</li>\n</ul>\n<p>Get the docker image</p>\n<pre><code>docker pull apache/age\n</code></pre>\n<p>Create AGE docker container</p>\n<pre><code>docker run \\\n--name age  \\\n-p 5455:5432 \\\n-e POSTGRES_USER=postgresUser \\\n-e POSTGRES_PASSWORD=postgresPW \\\n-e POSTGRES_DB=postgresDB \\\n-d \\\napache/age\n</code></pre>\n<p>Enter PostgreSQL's psql:</p>\n<pre><code>docker exec -it age psql -d postgresDB -U postgresUser\n</code></pre>\n<h2>Post Installation</h2>\n<p>For every connection of AGE you start, you will need to load the AGE extension.</p>\n<pre><code>CREATE EXTENSION age;\n</code></pre>\n<pre><code>LOAD 'age';\n</code></pre>\n<pre><code> SET search_path = ag_catalog, \"$user\", public;\n</code></pre>\n<h2>Quick Start</h2>\n<p>To create a graph, use the create_graph function located in the ag_catalog namespace.</p>\n<pre><code>SELECT create_graph('graph_name');\n</code></pre>\n<p>To create a single vertex, use the CREATE clause.</p>\n<pre><code>SELECT * \nFROM cypher('graph_name', $$\n    CREATE (n)\n$$) as (v agtype);\n</code></pre>\n<p>To create a single vertex with the label, use the CREATE clause.</p>\n<pre><code>SELECT * \nFROM cypher('graph_name', $$\n    CREATE (:label)\n$$) as (v agtype);\n</code></pre>\n<p>To query the graph, you can use the MATCH clause.</p>\n<pre><code>SELECT * \nFROM cypher('graph_name', $$\n    MATCH (v)\n    RETURN v\n$$) as (v agtype);\n</code></pre>\n<p>You can use the following to create an edge, for example, between two nodes.</p>\n<pre><code>SELECT * \nFROM cypher('graph_name', $$\n    MATCH (a:label), (b:label)\n    WHERE a.property = 'Node A' AND b.property = 'Node B'\n    CREATE (a)-[e:RELTYPE]->(b)\n    RETURN e\n$$) as (e agtype);\n</code></pre>\n<p>To create an edge and set properties.</p>\n<pre><code>SELECT * \nFROM cypher('graph_name', $$\n    MATCH (a:label), (b:label)\n    WHERE a.property = 'Node A' AND b.property = 'Node B'\n    CREATE (a)-[e:RELTYPE {property:a.property + '&#x3C;->' + b.property}]->(b)\n    RETURN e\n$$) as (e agtype);\n</code></pre>\n<p>Example</p>\n<pre><code>SELECT * \nFROM cypher('graph_name', $$\n    MATCH (a:Person), (b:Person)\n    WHERE a.name = 'Node A' AND b.name = 'Node B'\n    CREATE (a)-[e:RELTYPE {name:a.name + '&#x3C;->' + b.name}]->(b)\n    RETURN e\n$$) as (e agtype);\n</code></pre>\n</div>","frontmatter":{"title":"Quick Start"}}},"pageContext":{"id":"a6559931-683d-581f-adce-f2a05caabee5"}},"staticQueryHashes":["4080856488"]}